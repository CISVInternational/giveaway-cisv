{"version":3,"sources":["logo.svg","redux/selectors/general.selector.tsx","redux/slices/general.slice.tsx","containers/DataImport/DataImport.tsx","App.tsx","reportWebVitals.ts","redux/rootReducer.tsx","index.tsx","redux/createStore.tsx"],"names":["getParticipants","state","general","participants","slice","createSlice","name","initialState","destinies","reducers","putParticipants","action","payload","putDestinies","actions","reducer","DataImport","dispatch","useDispatch","useSelector","className","onClick","console","log","label","onFileLoaded","data","fileInfo","App","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","sliceGeneral","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAAe,G,YAAA,IAA0B,kC,+BCA5BA,EAAkB,SAACC,GAAD,OAAgBA,EAAMC,QAAQC,c,OCIvDC,EAAQC,YAAY,CACzBC,KAAM,UACNC,aAJoB,CAAEJ,aAAc,GAAIK,UAAW,IAKnDC,SAAU,CACTC,gBADS,SACOT,EAAOU,GACtBV,EAAME,aAAeQ,EAAOC,SAE7BC,aAJS,SAIIZ,EAAOU,GACnBV,EAAMO,UAAYG,EAAOC,YAObN,EAA2BF,EAA3BE,KAAMQ,EAAqBV,EAArBU,QAASC,EAAYX,EAAZW,Q,OCZtBL,EAAoBI,EAApBJ,gBAgBOM,EAbI,WACjB,IAAMC,EAAWC,cACXf,EAAegB,YAAYnB,GACjC,OAEE,sBAAKoB,UAAU,cAAf,UACE,wBAAQC,QAAS,WAAMC,QAAQC,IAAI,iBAAkBpB,IAArD,kBACE,cAAC,IAAD,CAAWqB,MAAM,yBAAyBC,aAAc,SAACC,EAAMC,GAAP,OAAoBV,EAASP,EAAgBgB,OACrG,cAAC,IAAD,CAAWF,MAAM,qBAAqBC,aAAc,SAACC,EAAMC,GAAP,OAAoBL,QAAQC,IAAI,WAAYG,U,MCSzFE,MAtBf,WACE,OACE,qBAAKR,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,IACA,qBAAKS,IAAKC,EAAMV,UAAU,WAAWW,IAAI,SACzC,sCACO,+CADP,0BAGA,mBACEX,UAAU,WACVY,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCAOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCFCQ,EAJKC,YAAgB,eAC/BC,EAAqBA,ICKpBC,ECNQC,YAAe,CAC5BjC,QAAS6B,IDOVK,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,IAAMI,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BlB,M","file":"static/js/main.34192839.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const getParticipants = (state: any) => state.general.participants","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = { participants: [], destinies: [] }\n\nconst slice = createSlice({\n\tname: 'general',\n\tinitialState,\n\treducers: {\n\t\tputParticipants(state, action) {\n\t\t\tstate.participants = action.payload\n\t\t},\n\t\tputDestinies(state, action) {\n\t\t\tstate.destinies = action.payload\n\t\t},\n\t},\n})\n\nexport default slice\n\nexport const { name, actions, reducer } = slice","\nimport './DataImport.css';\nimport CSVReader from 'react-csv-reader'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getParticipants } from '../../redux/selectors/general.selector'\nimport { actions } from '../../redux/slices/general.slice'\n\nconst { putParticipants } = actions\n\n\nconst DataImport = () => {\n  const dispatch = useDispatch();\n  const participants = useSelector(getParticipants)\n  return (\n    \n    <div className=\"data-import\">\n      <button onClick={() =>{console.log(\"participantsss\", participants)}}>eooo</button>\n        <CSVReader label=\"Importar participantes\" onFileLoaded={(data, fileInfo) => dispatch(putParticipants(data))} />\n        <CSVReader label=\"Importar programas\" onFileLoaded={(data, fileInfo) => console.log(\"programs\", data)} />\n    </div>\n  );\n}\n\nexport default DataImport;\n","import React from 'react';\nimport logo from './logo.svg';\nimport DataImport from './containers/DataImport/DataImport';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <DataImport />\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport * as sliceGeneral from \"./slices/general.slice\"\n\nconst rootReducer = combineReducers({\n    [sliceGeneral.name] : sliceGeneral.reducer\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './containers/general.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport createStore from './redux/createStore';\n\nconst store = createStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import rootReducer from './rootReducer'\nimport { configureStore } from '@reduxjs/toolkit'\n\nconst store = configureStore({\n\treducer: rootReducer,\n})\n\nexport default () => store"],"sourceRoot":""}